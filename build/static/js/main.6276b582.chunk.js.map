{"version":3,"sources":["../public/mainImg sync nonrecursive //.(png|jpe?g|svg)$","../public/mainImg/01.jpg","../public/mainImg/DIAMS.jpg","../public/mainImg/Laetitia.jpg","../public/mainImg/NEO PAGE.jpg","../public/mainImg/Planche1.jpg","../public/mainImg/Zaza.jpg","../public/mainImg/bloccartespostalesB.jpg","../public/mainImg/manon-00pp09.jpg","../public/mainImg/planche 2.jpg","Main.js","Contact.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Main","r","gallery","require","el","index","classes","key","alt","className","src","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","shuffle","Contact","props","App","style","overflow","to","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2KAAA,IAAIA,EAAM,CACT,WAAY,GACZ,cAAe,GACf,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,aAAc,GACd,4BAA6B,GAC7B,qBAAsB,GACtB,kBAAmB,IAIpB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,I,gBC9BpBU,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,iD,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,0GCgD5BC,EA9CF,WAyBT,IAvBmBC,EAwBfC,GAxBeD,EAuBIE,OAtBVR,OAAOV,IAAIgB,GAuBHhB,KAAI,SAACmB,EAAIC,GAE1B,IAAIC,EAAU,GAId,OAHID,EAAQ,IAAM,IAAGC,EAAU,SAC3BD,EAAQ,IAAM,IAAGC,EAAU,SAC3BD,EAAQ,IAAM,IAAGC,EAAU,SACvB,yBAAKC,IAAKH,EAAII,IAAI,GAAGC,UAAWH,EAASI,IAAKN,OAK1D,OAHAF,EA5BA,SAAiBS,GAIb,IAHA,IAAiCC,EAAgBC,EAA7CC,EAAeH,EAAMI,OAGlB,IAAMD,GAGXD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GAIzCF,EAAiBD,EAHjBG,GAAgB,GAIhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAGvB,OAAOD,EAYDQ,CAAQjB,GAId,yBAAKO,UAAU,gBACX,yBAAKA,UAAU,SACVP,KChCFkB,EARC,SAACC,GACb,OACI,yBAAKZ,UAAU,eACX,wCCmBGa,MAjBf,WACE,OACE,yBAAMC,MAAO,CAACC,SAAU,WACtB,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAMf,UAAU,aAAagB,GAAG,KAAI,iDACpC,kBAAC,IAAD,CAAOA,GAAG,YAAW,wCACrB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAW5B,IACjC,kBAAC,IAAD,CAAO0B,KAAK,WAAWE,UAAWR,QCJxBS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.6276b582.chunk.js","sourcesContent":["var map = {\n\t\"./01.jpg\": 25,\n\t\"./DIAMS.jpg\": 26,\n\t\"./Laetitia.jpg\": 27,\n\t\"./NEO PAGE.jpg\": 28,\n\t\"./Planche1.jpg\": 29,\n\t\"./Zaza.jpg\": 30,\n\t\"./bloccartespostalesB.jpg\": 31,\n\t\"./manon-00pp09.jpg\": 32,\n\t\"./planche 2.jpg\": 33\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 24;","module.exports = __webpack_public_path__ + \"static/media/01.b2f68dae.jpg\";","module.exports = __webpack_public_path__ + \"static/media/DIAMS.5aea495c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Laetitia.e936691d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/NEO PAGE.61afdd68.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Planche1.fda2684d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Zaza.629b4e9e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bloccartespostalesB.64a74d3a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/manon-00pp09.451a1d10.jpg\";","module.exports = __webpack_public_path__ + \"static/media/planche 2.4441eeba.jpg\";","import React from 'react'\n\nconst Main = () => {\n\n    function importAll(r) {\n        return r.keys().map(r);\n    }\n\n    function shuffle(array) {\n        var currentIndex = array.length, temporaryValue, randomIndex;\n      \n        // While there remain elements to shuffle...\n        while (0 !== currentIndex) {\n      \n          // Pick a remaining element...\n          randomIndex = Math.floor(Math.random() * currentIndex);\n          currentIndex -= 1;\n      \n          // And swap it with the current element.\n          temporaryValue = array[currentIndex];\n          array[currentIndex] = array[randomIndex];\n          array[randomIndex] = temporaryValue;\n        }\n      \n        return array;\n      }\n      \n    let images = importAll(require.context('./../public/mainImg/', false, /\\.(png|jpe?g|svg)$/));\n    let gallery = images.map((el, index) => \n    {\n        let classes = \"\"\n        if (index % 1 === 0) classes = \"main1\"\n        if (index % 2 === 0) classes = \"main2\"\n        if (index % 3 === 0) classes = \"main3\"\n        return  <img key={el} alt=\"\" className={classes} src={el}></img>\n    })\n    gallery = shuffle(gallery)\n    \n      \n    return(\n        <div className=\"picture_div2\">\n            <div className=\"main0\">\n                {gallery}\n            </div>\n        </div>\n    )\n}\n\nexport default Main","import React from 'react'\n\nconst Contact = (props) => {\n    return(\n        <div className=\"picture_div\">\n            <h1>Coucou</h1>\n        </div>\n    )\n}\n\nexport default Contact","import React from 'react';\nimport './App.css';\nimport  {BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom'\n\nimport Main from './Main';\nimport Contact from './Contact'\n\nfunction App() {\n  return (\n    <div  style={{overflow: \"hidden\"}}>\n      <Router>\n       \n        <Link className=\"Main_title\" to=\"/\"><h1>LOUISE GIRARDINI</h1></Link>\n        <Link  to=\"/Contact\"><h2>Contact</h2></Link>\n        <Switch >  \n          <Route path=\"/\" exact component={Main}/>\n          <Route path=\"/Contact\" component={Contact} />\n        </Switch>\n      </Router>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}