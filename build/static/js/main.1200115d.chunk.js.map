{"version":3,"sources":["../../media/mainImg sync nonrecursive //.(png|jpe?g|svg)$","../../media/mainImg/01.jpg","../../media/mainImg/DIAMS.jpg","../../media/mainImg/Laetitia.jpg","../../media/mainImg/NEO PAGE.jpg","../../media/mainImg/Planche1.jpg","../../media/mainImg/Zaza.jpg","../../media/mainImg/bloccartespostalesB.jpg","../../media/mainImg/manon-00pp09.jpg","../../media/mainImg/planche 2.jpg","Main.js","Utils/MenuIcon.js","Contact.js","Pages.js","Navbar.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Main","useState","gallery","setGallery","useEffect","r","galleries","require","el","index","classes","key","alt","className","src","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","shuffle","openedTransformationConfig","top","center","bottom","color","closedTransformationConfig","MenuIcon","props","useSpring","to","isOpened","config","stiff","onClick","showNav","style","zIndex","display","isMobile","svg","width","height","viewBox","fill","xmlns","rect","rx","transform","Contact","letterSpacing","marginBottom","fontWeight","fontSize","Pages","content","setContent","folder","folders","includes","title","Axios","get","then","res","data","process","Navbar","state","activeIndex","handleClick","newIndex","setState","this","section","Accordion","Title","active","Content","sort","a","b","path","substr","replace","navBarList","tmp","concat","marginLeft","marginTop","Component","App","setFolders","window","innerWidth","setShowNav","setIsMobile","addEventListener","handleMobile","removeEventListener","axios","handleNav","allPages","forEach","overflow","position","exact","component","paths","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iJAAA,IAAIA,EAAM,CACT,WAAY,IACZ,cAAe,IACf,iBAAkB,IAClB,iBAAkB,IAClB,iBAAkB,IAClB,aAAc,IACd,4BAA6B,IAC7B,qBAAsB,IACtB,kBAAmB,KAIpB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,K,oBC9BpBU,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,iD,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,uC,gICoD5BC,EAlDF,WAAO,IAAD,EACeC,mBAAS,IADxB,mBACRC,EADQ,KACCC,EADD,KAyCf,OAfAC,qBAAU,WACN,IAxBeC,EAyBXC,GAzBWD,EAwBQE,QAvBdZ,OAAOV,IAAIoB,GAwBGpB,KAAI,SAACuB,EAAIC,GAE5B,IAAIC,EAAU,GAId,OAHID,EAAQ,IAAM,IAAGC,EAAU,SAC3BD,EAAQ,IAAM,IAAGC,EAAU,SAC3BD,EAAQ,IAAM,IAAGC,EAAU,SACvB,yBAAKC,IAAKH,EAAII,IAAI,GAAGC,UAAWH,EAASI,IAAKN,OAE1DL,EA7BJ,SAAiBY,GAIb,IAHA,IAAiCC,EAAgBC,EAA7CC,EAAeH,EAAMI,OAGlB,IAAMD,GAGXD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GAIzCF,EAAiBD,EAHjBG,GAAgB,GAIhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAGvB,OAAOD,EAaIQ,CAAQjB,MACpB,IAKC,yBAAKO,UAAU,gBACX,yBAAKA,UAAU,SACVX,K,QC3CXsB,EAA6B,CAC/BC,IAAK,4BACLC,OAAQ,6BACRC,OAAQ,6BACRC,MAAO,cAGLC,EAA6B,CAC/BJ,IAAK,+BACLC,OAAQ,8BACRC,OAAQ,+BACRC,MAAO,cAkBIE,EAfG,SAACC,GAAW,IAAD,EACcC,YAAU,CAC7CC,GAAIF,EAAMG,SAAWL,EAA6BL,EAClDW,OAAQA,IAAOC,QAFXX,EADiB,EACjBA,IAAKC,EADY,EACZA,OAAQC,EADI,EACJA,OAAQC,EADJ,EACIA,MAI7B,OACI,yBAAKS,QAASN,EAAMO,QAASC,MAAO,CAACC,OAAQ,IAAKC,QAASV,EAAMW,SAAW,QAAU,SAClF,kBAAC,IAASC,IAAV,CAAcC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAMnB,EAAOoB,MAAM,8BACxE,kBAAC,IAASC,KAAV,CAAeL,MAAM,KAAKC,OAAO,OAAOK,GAAG,IAAIC,UAAW1B,IAC1D,kBAAC,IAASwB,KAAV,CAAeL,MAAM,KAAKC,OAAO,OAAOK,GAAG,IAAIC,UAAWzB,IAC1D,kBAAC,IAASuB,KAAV,CAAeL,MAAM,KAAKC,OAAO,OAAOK,GAAG,IAAIC,UAAWxB,OCf3DyB,EAVC,SAACrB,GACb,OACI,yBAAKlB,UAAU,eACX,wBAAI0B,MAAO,CAACc,cAAe,OAAQC,aAAc,UAAjD,mBACA,wBAAIf,MAAO,CAACgB,WAAY,MAAOF,cAAe,SAA9C,kBACA,wBAAId,MAAO,CAACgB,WAAY,MAAOC,SAAU,MAAO5B,MAAO,OAAQyB,cAAe,SAA9E,+BCgBGI,EApBD,SAAC1B,GAAW,IAAD,EACS9B,mBAAS,IADlB,mBACdyD,EADc,KACLC,EADK,KAarB,OAVAvD,qBAAU,WAIN,IAHA,IACIwD,EAAS,GAEb,MAHahE,OAAOD,KAAKoC,EAAM8B,SAG/B,gBAAI,IAAIlD,EAAG,KAAaoB,EAAM8B,QAAQlD,GAAKmD,SAAS/B,EAAMgC,SAAQH,EAASjD,GAE3EqD,IAAMC,IAAN,0BAA6BL,EAA7B,iBAA4C7B,EAAMgC,QAC7CG,MAAK,SAACC,GAAD,OAASR,EAAWQ,EAAIC,WACnC,CAACrC,IAGA,yBAAKlB,UAAU,eACV6C,EAAQzE,KAAI,SAACuB,GAAD,OAAQ,yBAAKG,IAAKH,EAAII,IAAI,GAAGC,UAAU,MAAMC,IAAKuD,GAAyB7D,S,iDC+CrF8D,E,2MA5DbC,MAAQ,CAAEC,aAAc,G,EAExBC,YAAc,SAAChE,GAAW,IAElBiE,EADkB,EAAKH,MAArBC,cACyB/D,GAAS,EAAIA,EAE9C,EAAKkE,SAAS,CAAEH,YAAaE,K,wEAGrB,IAAD,OACCF,EAAgBI,KAAKL,MAArBC,YACFX,EAAUe,KAAK7C,MAAM8B,QACrBlE,EAAOC,OAAOD,KAAKkE,GAEnBgB,EAAU,SAAChB,EAASlD,EAAKF,GAC3B,OACI,yBAAKE,IAAKF,GACN,kBAACqE,EAAA,EAAUC,MAAX,CACIC,OAAQR,IAAgB/D,EACxBA,MAAOA,EACP4B,QAAS,kBAAM,EAAKoC,YAAYhE,KAChC,uBAAGI,UAAU,gBAAgBF,IAEjC,kBAACmE,EAAA,EAAUG,QAAX,CAAmBD,OAAQR,IAAgB/D,GACvC,4BACKoD,EAAQlD,GAAKuE,MAAK,SAACC,EAAEC,GAAH,OAASD,EAAE,GAAKC,EAAE,MAAInG,KAAI,SAACuB,GAC1C,IAAM6E,EAAI,WAAO7E,GAEjB,MAAU,cADVA,EAAKA,EAAG8E,OAAO,GAAGC,QAAQ,KAAM,MAGxB,wBAAI5E,IAAKH,GAAI,kBAAC,IAAD,CAAM6B,QAAU,WAAY,EAAKN,MAAMW,UAAU,EAAKX,MAAMO,WACrEzB,UAAU,OACVoB,GAAIoD,GACP7E,IAEG,YAQhCgF,EAAa,GACjB,IAAI,IAAI7E,KAAOhB,EAAM,CACjB,IAAI8F,EAAMZ,EAAQhB,EAASlE,EAAKgB,GAAMA,GACtC6E,EAAaA,EAAWE,OAAOD,GAGnC,OACI,yBAAK5E,UAAU,UACX,kBAACiE,EAAA,EAAD,KACKU,EACD,kBAAC,IAAD,CAAOnD,QAAU,WAAY,EAAKN,MAAMW,UAAU,EAAKX,MAAMO,WAAaL,GAAG,YAAW,uBAAGpB,UAAU,eAAe0B,MAAO,CAACoD,WAAY,MAAOC,UAAW,SAAlE,kB,GAtDnFC,aCsENC,EAhEH,WAAQ,IAAD,EACa7F,mBAAS,IADtB,mBACV4D,EADU,KACDkC,EADC,OAEa9F,qBAAS+F,OAAOC,YAAc,MAF3C,mBAEV3D,EAFU,KAED4D,EAFC,OAGejG,mBAAS+F,OAAOC,YAAc,KAH7C,mBAGVvD,EAHU,KAGAyD,EAHA,KAKjB/F,qBAAU,WAER,OADA4F,OAAOI,iBAAiB,SAAUC,GAC3B,kBACPL,OAAOM,oBAAoB,SAAUD,OAGvCjG,qBAAU,WACRmG,IAAMtC,IAAI,gBACLC,MAAK,SAAAC,GAAG,OAAI4B,EAAW5B,EAAIC,WAC/B,IAEH,IAAMoC,EAAY,WAAQN,GAAY5D,IAEhC+D,EAAe,WACnBF,EAAYH,OAAOC,YAAc,KACjCC,IAAWF,OAAOC,YAAc,OAG9BQ,EAAW,GAKf,OAJA7G,OAAOD,KAAKkE,GAAS6C,SAAQ,SAAU/F,GACnC8F,EAAWA,EAASf,OAAO7B,EAAQlD,OAKrC,yBAAM4B,MAAO,CAACoE,SAAU,WACtB,kBAAC,IAAD,KAEE,yBAAK9F,UAAU,MAAM0B,MAAO,CAACqE,SAAU,QAASpE,OAAQ,MACtD,kBAAC,EAAD,CAAUF,QAASkE,EAAWtE,SAAUI,EAASI,SAAUA,IAC3D,kBAAC,IAAD,CAAM7B,UAAU,aAAaoB,GAAG,IAAII,QAAS,kBAAM6D,IAAWF,OAAOC,YAAc,QAAqB,iDAG1G,yBAAKpF,UAAU,OAEb,yBAAKA,UAAU,OAAO0B,MAAO,CAACoD,WAAYrD,EAAU,EAAI,SAAUsE,SAAU,UAC1E,kBAAC,EAAD,CAAQtE,QAASkE,EAAW9D,SAAUA,EAAUmB,QAASA,KAG3D,yBAAKhD,UAAU,OAAO0B,MAAO,CAACoD,WAAYrD,EAAU,QAAU,IAC5D,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO+C,KAAK,IAAIwB,OAAK,EAACC,UAAW9G,IAE7ByG,EAASxH,KAAI,SAACuB,GACV,IAAIuG,EAAM,IAAD,OAAMvG,GACf,OACA,kBAAC,IAAD,CAAOG,IAAKH,EAAI6E,KAAM0B,EAAOD,UAAW,kBAAM,kBAAC,EAAD,CAAOjD,QAASA,EAAUE,MAAOvD,UAGvF,kBAAC,IAAD,CAAO6E,KAAK,WAAWyB,UAAW1D,UCpD9B4D,QACW,cAA7BhB,OAAOiB,SAASC,UAEe,UAA7BlB,OAAOiB,SAASC,UAEhBlB,OAAOiB,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMxD,MAAK,SAAAyD,GACjCA,EAAaC,kB","file":"static/js/main.1200115d.chunk.js","sourcesContent":["var map = {\n\t\"./01.jpg\": 158,\n\t\"./DIAMS.jpg\": 159,\n\t\"./Laetitia.jpg\": 160,\n\t\"./NEO PAGE.jpg\": 161,\n\t\"./Planche1.jpg\": 162,\n\t\"./Zaza.jpg\": 163,\n\t\"./bloccartespostalesB.jpg\": 164,\n\t\"./manon-00pp09.jpg\": 165,\n\t\"./planche 2.jpg\": 166\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 157;","module.exports = __webpack_public_path__ + \"static/media/01.b2f68dae.jpg\";","module.exports = __webpack_public_path__ + \"static/media/DIAMS.5aea495c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Laetitia.e936691d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/NEO PAGE.61afdd68.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Planche1.fda2684d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Zaza.629b4e9e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bloccartespostalesB.64a74d3a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/manon-00pp09.451a1d10.jpg\";","module.exports = __webpack_public_path__ + \"static/media/planche 2.4441eeba.jpg\";","import React, { useEffect, useState } from 'react'\n\nconst Main = () => {\n    const [gallery, setGallery] = useState([])\n\n    function importAll(r) {\n        return r.keys().map(r);\n    }\n\n    function shuffle(array) {\n        var currentIndex = array.length, temporaryValue, randomIndex;\n      \n        // While there remain elements to shuffle...\n        while (0 !== currentIndex) {\n      \n          // Pick a remaining element...\n          randomIndex = Math.floor(Math.random() * currentIndex);\n          currentIndex -= 1;\n      \n          // And swap it with the current element.\n          temporaryValue = array[currentIndex];\n          array[currentIndex] = array[randomIndex];\n          array[randomIndex] = temporaryValue;\n        }\n      \n        return array;\n      }\n\n    useEffect(() => {\n        let images = importAll(require.context('./../../media/mainImg/', false, /\\.(png|jpe?g|svg)$/));\n        let galleries = images.map((el, index) => \n        {\n            let classes = \"\"\n            if (index % 1 === 0) classes = \"main1\"\n            if (index % 2 === 0) classes = \"main2\"\n            if (index % 3 === 0) classes = \"main3\"\n            return  <img key={el} alt=\"\" className={classes} src={el}></img>\n        })\n        setGallery(shuffle(galleries))\n    }, [])  \n    \n    \n      \n    return(\n        <div className=\"picture_div2\">\n            <div className=\"main0\">\n                {gallery}\n            </div>\n        </div>\n    )\n}\n\nexport default Main","import React from 'react'\nimport { animated, useSpring, config } from 'react-spring'\n\nconst openedTransformationConfig = {\n    top: 'translate(2, 7) rotate(0)',\n    center: 'translate(2, 19) rotate(0)',\n    bottom: 'translate(2, 31) rotate(0)',\n    color: 'rgb(0,0,0)', // Add color\n}\n\nconst closedTransformationConfig = {\n    top: 'translate(5, 32) rotate(-45)',\n    center: 'translate(10, 4) rotate(45)',\n    bottom: 'translate(5, 32) rotate(-45)',\n    color: 'rgb(0,0,0)', // Add color\n}\n\nconst  MenuIcon = (props) => {\n    const { top, center, bottom, color } = useSpring({\n        to: props.isOpened ? closedTransformationConfig : openedTransformationConfig,\n        config: config.stiff,\n    })\n    return (\n        <div onClick={props.showNav} style={{zIndex: \"1\", display: props.isMobile ? \"block\" : \"none\" }}>\n            <animated.svg width=\"44\" height=\"44\" viewBox=\"0 0 44 44\" fill={color} xmlns=\"http://www.w3.org/2000/svg\">\n                <animated.rect width=\"40\" height=\".4em\" rx=\"3\" transform={top} />\n                <animated.rect width=\"40\" height=\".4em\" rx=\"3\" transform={center} />\n                <animated.rect width=\"40\" height=\".4em\" rx=\"3\" transform={bottom} />\n            </animated.svg>\n        </div>\n    )\n}\nexport default MenuIcon","import React from 'react'\n\nconst Contact = (props) => {\n    return(\n        <div className=\"contact_div\">\n            <h1 style={{letterSpacing: \".2em\", marginBottom: \"1.5em\"}}>Louise Girardin</h1>\n            <h2 style={{fontWeight: \"400\", letterSpacing: \".2em\"}}>Based in Paris</h2>\n            <h2 style={{fontWeight: \"400\", fontSize: \"1em\", color: \"grey\", letterSpacing: \".2em\"}}>louise.girardin@gmail.com</h2>\n        </div>\n    )\n}\n\nexport default Contact","import React, {useState, useEffect} from 'react'\nimport Axios from 'axios'\n\nconst Pages = (props) => {\n    const [content, setContent] = useState([])\n\n    useEffect(() => {\n        const keys = Object.keys(props.folders);\n        let folder = \"\";\n\n        for(let key of keys) if(props.folders[key].includes(props.title)) folder = key;\n\n        Axios.get(`/getPage?folder=${folder}&page=${props.title}`)\n            .then((res) => setContent(res.data))\n    }, [props])\n\n    return (\n        <div className=\"picture_div\">\n            {content.map((el) => <img key={el} alt=\"\" className=\"img\" src={process.env.PUBLIC_URL + el}></img> )}\n        </div>\n    )\n}\n\nexport default Pages","import React, { Component } from 'react'\nimport { Accordion } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom';\n\nclass Navbar extends Component {\n  state = { activeIndex: -1 }\n    \n  handleClick = (index) => {\n    const { activeIndex } = this.state\n    const newIndex = activeIndex === index ? -1 : index\n\n    this.setState({ activeIndex: newIndex })\n  }\n\n  render() {\n    const { activeIndex } = this.state\n    const folders = this.props.folders\n    const keys = Object.keys(folders);\n\n    const section = (folders, key, index) => {\n        return (\n            <div key={index}>\n                <Accordion.Title\n                    active={activeIndex === index}\n                    index={index}\n                    onClick={() => this.handleClick(index)}>\n                    <p className=\"navbar-title\">{key}</p>\n                </Accordion.Title>\n                <Accordion.Content active={activeIndex === index}>\n                    <ul>\n                        {folders[key].sort((a,b) => a[0] > b[0]).map((el) => {\n                            const path = `/${el}`\n                            el = el.substr(1).replace(/_/g, \" \")\n                            if(el !== \"DS Store\")\n                                return (\n                                    <li key={el}><Link onClick={ () => { if (this.props.isMobile) this.props.showNav() }}\n                                        className=\"link\"\n                                        to={path}>\n                                    {el}</Link></li>\n                                )\n                            else return null;\n                        })}\n                    </ul>\n                </Accordion.Content>\n            </div>\n        )\n    }\n\n    let navBarList = []\n    for(let key in keys) {\n        let tmp = section(folders, keys[key], key)\n        navBarList = navBarList.concat(tmp)\n    }\n\n    return (\n        <div className=\"navbar\">\n            <Accordion>\n                {navBarList}\n                <Link  onClick={ () => { if (this.props.isMobile) this.props.showNav() }} to=\"/Contact\"><p className=\"navbar-title\" style={{marginLeft: \"-7%\", marginTop: \"20px\"}}>CONTACT</p></Link>\n            </Accordion>\n        </div>\n    )\n  }\n}\n\nexport default Navbar","import React, { useEffect, useState } from 'react';\nimport  {HashRouter as Router, Switch, Route, Link} from 'react-router-dom'\nimport axios from 'axios';\n\nimport Main from './Main';\nimport MenuIcon from './Utils/MenuIcon';\nimport Contact from './Contact';\nimport Pages from './Pages';\nimport Navbar from './Navbar'\n\nconst App = ()  => {\n  const [folders, setFolders] = useState({});\n  const [showNav, setShowNav] = useState(window.innerWidth <= 640 ? false : true,)\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 640 ? true : false,)\n  \n  useEffect(() => {\n    window.addEventListener('resize', handleMobile)\n    return () =>\n    window.removeEventListener('resize', handleMobile)\n  })\n\n  useEffect(() => {\n    axios.get('/folderInfos')\n        .then(res => setFolders(res.data))\n  }, [])\n\n  const handleNav = () => { setShowNav(!showNav) }\n\n  const handleMobile = () => { \n    setIsMobile(window.innerWidth <= 640 ? true : false);\n    setShowNav(window.innerWidth <= 640 ? false : true);\n  }\n\n  let allPages = []\n  Object.keys(folders).forEach(function (key) {\n      allPages = allPages.concat(folders[key]);\n  });\n\n  return (\n    \n    <div  style={{overflow: \"hidden\"}}>\n      <Router>\n\n        <div className=\"Row\" style={{position: \"fixed\", zIndex: \"1\"}}>\n          <MenuIcon showNav={handleNav} isOpened={showNav} isMobile={isMobile}/>\n          <Link className=\"Main_title\" to=\"/\" onClick={() => setShowNav(window.innerWidth <= 640 ? false : true)}><h1>LOUISE GIRARDIN</h1></Link>\n        </div>\n\n        <div className=\"Row\" >\n\n          <div className=\"Col1\" style={{marginLeft: showNav ? 0 : \"-250px\", position: \"fixed\"}}>\n            <Navbar showNav={handleNav} isMobile={isMobile} folders={folders}/>\n          </div>\n          \n          <div className=\"Col2\" style={{marginLeft: showNav ? \"250px\" : 0}}>\n            <Switch >\n                <Route path=\"/\" exact component={Main}/>\n                {\n                    allPages.map((el) =>  {\n                        let paths= `/${el}`;\n                        return (\n                        <Route key={el} path={paths} component={() => <Pages folders={folders}  title={el}/> }/>\n                    )})\n                }\n                <Route path=\"/Contact\" component={Contact} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}